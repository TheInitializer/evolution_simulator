import creature
import food
import pyglet
import random
import dna_parser
from config import window_width, window_height
import math

window = pyglet.window.Window(
    width=window_width,
    height=window_height,
    caption="EVOLUTION SIMULATATRON 3000")

# hud_window = pyglet.window.Window(
#     width = 200,
#     height = window_height,
#     caption = "Code visualizer")

foods = []
for i in range(30):
    foods.append(food.Food(
        random.randint(0, window_width),
        random.randint(0, window_height)))

creature.creatures = []
#init_dna = "03201244959920801i1=1:al1+1232=3:Uf;b"
init_dna = "03201246040aif<x:L1lf>x:R1;iF<y:D1lF>y:U1b"
#init_dna = "032012460401aih.H:ix.X:Lx-X;iX.x:RX-x;iy.Y:Dy-Y;iY.y:UY-y;"
#init_dna = "032012460401aiX<x:L1lX>x:R1;iY<y:D1lF>Y:U1"
#init_dna = "03201246040U1b"

# GENERATED BY COMPUTER THIS IS SO COOL AAAAA
#init_dna = "032012460401aif<x:L1lf>x:R1;iF<y:DAlF>y:U1"

for i in range(20):
    creature.creatures.append(creature.Creature(
        *dna_parser.splitDNA(init_dna),
        random.randint(16, window_width - 16),
        random.randint(16, window_height - 16)))

fps_display = pyglet.clock.ClockDisplay(
    format='%(fps).1f',
    color=(0.5, 0.5, 0.5, 1)
)

#pyglet.gl.glClearColor(1, 1, 1, 1)


@window.event
def on_draw():
    window.clear()
    for f in foods:
        f.draw()
    for c in creature.creatures:
        c.draw()
        c.label.draw()
    fps_display.draw()

# hud = pyglet.text.Label("HUD will go here",
#                   font_name='Iosevka',
#                   font_size=16,
#                   x=0, y=window_height,
#                   anchor_x='center', anchor_y='center')
# @hud_window.event
# def on_draw():
#     hud.draw()

@window.event
def on_mouse_press(x, y, button, modifiers):
    global hud
    distances = {}
    for i in creature.creatures:
        distances[i] = math.sqrt(
            (i.x - x) ** 2 +
            (i.y - y) ** 2)
    nearest = min(distances, key=distances.get)

    code = dna_parser.parse_dna(nearest.dna, [])
    print(code)


def update(dt):
    for c in creature.creatures:
        c.do_stuff([i for i in creature.creatures if i != c], foods)
        if c in creature.creatures and c.health <= 0:
            creature.creatures.remove(c)
    if random.random() > 0.6:
        foods.append(food.Food(
           random.randint(0, window_width),
           random.randint(0, window_height)))

if __name__ == "__main__":
    pyglet.clock.schedule_interval(update, 1/28)
    pyglet.app.run()
